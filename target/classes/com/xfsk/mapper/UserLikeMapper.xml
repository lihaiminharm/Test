<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xfsk.mapper.UserLikeMapper" >
  <resultMap id="BaseResultMap" type="com.xfsk.domain.UserLike" >
    <id column="Like_uuid" property="likeUuid" jdbcType="INTEGER" />
    <result column="Like_id" property="likeId" jdbcType="VARCHAR" />
    <result column="Like_datetime" property="likeDatetime" jdbcType="TIMESTAMP" />
    <result column="Vid_id" property="vidId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Like_uuid, Like_id, Like_datetime, Vid_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xfsk.domain.UserLikeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from UserLike
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from UserLike
    where Like_uuid = #{likeUuid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByKey" parameterType="java.lang.Integer" >
    delete from UserLike
    where Like_uuid = #{likeUuid,jdbcType=INTEGER}

  </delete>


  <delete id="deleteByExample" parameterType="com.xfsk.domain.UserLikeExample" >
    delete from UserLike
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xfsk.domain.UserLike" >
    insert into UserLike (Like_uuid, Like_id, Like_datetime, 
      Vid_id)
    values (#{likeUuid,jdbcType=INTEGER}, #{likeId,jdbcType=VARCHAR}, #{likeDatetime,jdbcType=TIMESTAMP}, 
      #{vidId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xfsk.domain.UserLike" >
    insert into UserLike
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="likeUuid != null" >
        Like_uuid,
      </if>
      <if test="likeId != null" >
        Like_id,
      </if>
      <if test="likeDatetime != null" >
        Like_datetime,
      </if>
      <if test="vidId != null" >
        Vid_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="likeUuid != null" >
        #{likeUuid,jdbcType=INTEGER},
      </if>
      <if test="likeId != null" >
        #{likeId,jdbcType=VARCHAR},
      </if>
      <if test="likeDatetime != null" >
        #{likeDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="vidId != null" >
        #{vidId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xfsk.domain.UserLikeExample" resultType="java.lang.Integer" >
    select count(*) from UserLike
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update UserLike
    <set >
      <if test="record.likeUuid != null" >
        Like_uuid = #{record.likeUuid,jdbcType=INTEGER},
      </if>
      <if test="record.likeId != null" >
        Like_id = #{record.likeId,jdbcType=VARCHAR},
      </if>
      <if test="record.likeDatetime != null" >
        Like_datetime = #{record.likeDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.vidId != null" >
        Vid_id = #{record.vidId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update UserLike
    set Like_uuid = #{record.likeUuid,jdbcType=INTEGER},
      Like_id = #{record.likeId,jdbcType=VARCHAR},
      Like_datetime = #{record.likeDatetime,jdbcType=TIMESTAMP},
      Vid_id = #{record.vidId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xfsk.domain.UserLike" >
    update UserLike
    <set >
      <if test="likeId != null" >
        Like_id = #{likeId,jdbcType=VARCHAR},
      </if>
      <if test="likeDatetime != null" >
        Like_datetime = #{likeDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="vidId != null" >
        Vid_id = #{vidId,jdbcType=INTEGER},
      </if>
    </set>
    where Like_uuid = #{likeUuid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xfsk.domain.UserLike" >
    update UserLike
    set Like_id = #{likeId,jdbcType=VARCHAR},
      Like_datetime = #{likeDatetime,jdbcType=TIMESTAMP},
      Vid_id = #{vidId,jdbcType=INTEGER}
    where Like_uuid = #{likeUuid,jdbcType=INTEGER}
  </update>
  <delete id="deleteByVideoId"  parameterType="UserLike" >
    delete from UserLike
    where Like_id=#{likeId,jdbcType=VARCHAR} and Vid_id = #{vidId,jdbcType=INTEGER}
  </delete>

  <select id="getUserLikeInfo" resultType="UserLike" resultMap="BaseResultMap">
    select * from UserLike where Like_id=#{likeId,jdbcType=VARCHAR} and Vid_id = #{vidId,jdbcType=INTEGER}
  </select>
  <select id="selectTF"   resultType="java.lang.Integer" >
    select count(*) from UserLike where Like_id= #{likeId,jdbcType=VARCHAR} and Vid_id= #{vidId,jdbcType=INTEGER}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from UserLike
    where Like_id = #{likeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from UserLike
    where Like_id = #{likeId,jdbcType=VARCHAR}
  </delete>
</mapper>